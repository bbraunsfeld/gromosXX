  fc.unlock("LR_LJ_CORRECTION", "WRITETRAJ: NTWV has to be 0 for energy minimization.");
  fc.unlock("LR_LJ_CORRECTION", "INITIALISE block: NTIVEL=1 even though we do an energy minimization");
  fc.unlock("LR_LJ_CORRECTION", "PRESSURESCALE block: pressure coupling not allowed with steepest descent minimization");
  fc.unlock("LR_LJ_CORRECTION", "MULTIBATH block: temperature coupling not allowed with energy minimization");
  fc.unlock("LR_LJ_CORRECTION", "Atomic shift vector reading (NTISHI=0) not possible under vacuum boundary conditions.");
  fc.unlock("LR_LJ_CORRECTION", "NTWG>0: free-energy trajectory writing even though perturbation is off.");
  fc.unlock("LR_LJ_CORRECTION", "MULTIBATH block: NTINHT must be 0 when not using Nose-Hoover chains for temperature coupling");
  fc.unlock("LR_LJ_CORRECTION", "POSITIONRES block: NTPORS=1 can not be used when pressure scaling is off.");
  fc.unlock("LR_LJ_CORRECTION", "ROTTRANS or COMTRANSROT should not be used at the same time.");
  fc.unlock("LR_LJ_CORRECTION", "READTRAJ block: not allowed with vacuum boundary conditions.");
  fc.unlock("LR_LJ_CORRECTION", "READTRAJ block: requires NTIVEL=0 and NTISHK=0,1.");
  fc.unlock("LR_LJ_CORRECTION", "READTRAJ block requires NTWV=0.");
  fc.unlock("LR_LJ_CORRECTION", "STOCHDYN block: if stochastic dynamics is off, NTISTI has to be set to 0");
  fc.unlock("LR_LJ_CORRECTION", "EDS/AEDS block: EDS requires temperature coupling.");
  fc.unlock("LR_LJ_CORRECTION", "EDS/AEDS block: all baths must have the same temperature.");
  fc.unlock("LR_LJ_CORRECTION", "PRESSURESCALE block: full anisotropic pressure scaling requires a triclinic box.");
  fc.unlock("LR_LJ_CORRECTION", "PRESSURESCALE block: (semi-)anisotropic pressure scaling requires a rectangular or triclinic box.");
  fc.unlock("LR_LJ_CORRECTION", "REPLICA block: Hamiltonian replica exchange but perturbation is off.");
  fc.unlock("LR_LJ_CORRECTION", "PRECALCLAM cannot be on without perturbation");
  fc.unlock("LR_LJ_CORRECTION", "PRECALCLAM requires NTWE=NTWG > 0");
  fc.unlock("LR_LJ_CORRECTION", "solute");
  fc.unlock("LR_LJ_CORRECTION", "solvent");
  fc.unlock("LR_LJ_CORRECTION", "solvent_only");
  fc.unlock("LR_LJ_CORRECTION", "steepest_descent");
  fc.unlock("LR_LJ_CORRECTION", "solute_constraint_off");
  fc.unlock("LR_LJ_CORRECTION", "solute_shake");
  fc.unlock("LR_LJ_CORRECTION", "solute_lincs");
  fc.unlock("LR_LJ_CORRECTION", "solute_flexshake");
  fc.unlock("LR_LJ_CORRECTION", "solvent_constraint_off");
  fc.unlock("LR_LJ_CORRECTION", "solvent_shake");
  fc.unlock("LR_LJ_CORRECTION", "solvent_lincs");
  fc.unlock("LR_LJ_CORRECTION", "solvent_settle");
  fc.unlock("LR_LJ_CORRECTION", "pressure_calculation");
  fc.unlock("LR_LJ_CORRECTION", "pressure_scale_berendsen");
  fc.unlock("LR_LJ_CORRECTION", "virial_off");
  fc.unlock("LR_LJ_CORRECTION", "virial_atomic");
  fc.unlock("LR_LJ_CORRECTION", "virial_molecular");
  fc.unlock("LR_LJ_CORRECTION", "vacuum");
  fc.unlock("LR_LJ_CORRECTION", "pbc_r");
  fc.unlock("LR_LJ_CORRECTION", "pbc_c");
  fc.unlock("LR_LJ_CORRECTION", "pbc_t");
  fc.unlock("LR_LJ_CORRECTION", "perturbation");
  fc.unlock("LR_LJ_CORRECTION", "perturbation_scaling");
  fc.unlock("LR_LJ_CORRECTION", "slow_growth");
  fc.unlock("LR_LJ_CORRECTION", "individual_lambdas");
  fc.unlock("LR_LJ_CORRECTION", "precalculate_lambdas");
  fc.unlock("LR_LJ_CORRECTION", "bond");
  fc.unlock("LR_LJ_CORRECTION", "angle");
  fc.unlock("LR_LJ_CORRECTION", "dihedral");
  fc.unlock("LR_LJ_CORRECTION", "improper");
  fc.unlock("LR_LJ_CORRECTION", "crf");
  fc.unlock("LR_LJ_CORRECTION", "lj");
  fc.unlock("LR_LJ_CORRECTION", "com_removal");
  fc.unlock("LR_LJ_CORRECTION", "rf_excluded");
  fc.unlock("LR_LJ_CORRECTION", "pairlist_standard");
  fc.unlock("LR_LJ_CORRECTION", "pairlist_grid");
  fc.unlock("LR_LJ_CORRECTION", "pairlist_gridcell");
  fc.unlock("LR_LJ_CORRECTION", "cutoff_atomic");
  fc.unlock("LR_LJ_CORRECTION", "cutoff_cg");
  fc.unlock("LR_LJ_CORRECTION", "cg_martini");
  fc.unlock("LR_LJ_CORRECTION", "cg_gromos");
  fc.unlock("LR_LJ_CORRECTION", "mixed_grain");
  fc.unlock("LR_LJ_CORRECTION", "temp_berendsen");
  fc.unlock("LR_LJ_CORRECTION", "temp_nosehoover");
  fc.unlock("LR_LJ_CORRECTION", "temp_nosehoover_chains");
  fc.unlock("LR_LJ_CORRECTION", "position_rest");
  fc.unlock("LR_LJ_CORRECTION", "position_const");
  fc.unlock("LR_LJ_CORRECTION", "position_const_scaled");
  fc.unlock("LR_LJ_CORRECTION", "distance_rest");
  fc.unlock("LR_LJ_CORRECTION", "distance_field");
  fc.unlock("LR_LJ_CORRECTION", "dihedral_rest");
  fc.unlock("LR_LJ_CORRECTION", "dihedral_const");
  fc.unlock("LR_LJ_CORRECTION", "jvalue_rest");
  fc.unlock("LR_LJ_CORRECTION", "rdc_rest");
  fc.unlock("LR_LJ_CORRECTION", "perscale");
  fc.unlock("LR_LJ_CORRECTION", "rottrans");
  fc.unlock("LR_LJ_CORRECTION", "innerloop_method_off");
  fc.unlock("LR_LJ_CORRECTION", "innerloop_method_generic");
  fc.unlock("LR_LJ_CORRECTION", "innerloop_method_hardcode");
  fc.unlock("LR_LJ_CORRECTION", "innerloop_method_table");
  fc.unlock("LR_LJ_CORRECTION", "innerloop_method_cuda");
  fc.unlock("LR_LJ_CORRECTION", "innerloop_solvent_topology");
  fc.unlock("LR_LJ_CORRECTION", "innerloop_solvent_spc");
  fc.unlock("LR_LJ_CORRECTION", "repex_temp");
  fc.unlock("LR_LJ_CORRECTION", "repex_lambda");
  fc.unlock("LR_LJ_CORRECTION", "multicell");
  fc.unlock("LR_LJ_CORRECTION", "analysis");
  fc.unlock("LR_LJ_CORRECTION", "no_integration");
  fc.unlock("LR_LJ_CORRECTION", "stochdyn");
  fc.unlock("LR_LJ_CORRECTION", "multistep");
  fc.unlock("LR_LJ_CORRECTION", "multistep_boost");
  fc.unlock("LR_LJ_CORRECTION", "montecarlo");
  fc.unlock("LR_LJ_CORRECTION", "polarisation_cos");
  fc.unlock("LR_LJ_CORRECTION", "polarisation_cos_damped");
  fc.unlock("LR_LJ_CORRECTION", "sasa");
  fc.unlock("LR_LJ_CORRECTION", "sasavol");
  fc.unlock("LR_LJ_CORRECTION", "random_gromos");
  fc.unlock("LR_LJ_CORRECTION", "random_gsl");
  fc.unlock("LR_LJ_CORRECTION", "eds");
  fc.unlock("LR_LJ_CORRECTION", "aeds");
  fc.unlock("LR_LJ_CORRECTION", "eds");
  fc.unlock("LR_LJ_CORRECTION", "aeds");
  fc.unlock("LR_LJ_CORRECTION", "eds");
  fc.unlock("LR_LJ_CORRECTION", "aeds");
  fc.unlock("LR_LJ_CORRECTION", "parallel_mpi");
  fc.unlock("LR_LJ_CORRECTION", "parallel_omp");
  fc.unlock("LR_LJ_CORRECTION", "mult_energy_groups");
  fc.unlock("LR_LJ_CORRECTION", "ewald");
  fc.unlock("LR_LJ_CORRECTION", "p3m");
  fc.unlock("LR_LJ_CORRECTION", "leus");
  fc.unlock("LR_LJ_CORRECTION", "bsleus");
  fc.unlock("LR_LJ_CORRECTION", "xray");
  fc.unlock("LR_LJ_CORRECTION", "force_groups");
  fc.unlock("LR_LJ_CORRECTION", "off_site");
